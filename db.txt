# ========== 1. CORRECTED DATABASE SETUP ==========
class DBManager:
    _instance = None
    
    def __new__(cls):
        if not cls._instance:
            cls._instance = super().__new__(cls)
            cls._instance.conn = sqlite3.connect(
                'telecom.db',
                timeout=20,
                check_same_thread=False
            )
            cls._instance.init_db()
        return cls._instance
    
    def init_db(self):
        with self.conn:
            # Clean existing tables
            self.conn.execute('DROP TABLE IF EXISTS orders')
            self.conn.execute('DROP TABLE IF EXISTS fallouts')
            
            # Create fresh tables with correct schema
            self.conn.execute('''
                CREATE TABLE orders (
                    order_id TEXT PRIMARY KEY,
                    activation_status TEXT,
                    esim_status TEXT,
                    switch_status TEXT,
                    last_updated DATETIME DEFAULT CURRENT_TIMESTAMP
                )''')
            
            self.conn.execute('''
                CREATE TABLE fallouts (
                    fallout_id INTEGER PRIMARY KEY,
                    order_id TEXT,
                    resolution_type TEXT,
                    status TEXT,
                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
                )''')
            
            # Insert sample data with explicit columns
            self.conn.executemany('''
                INSERT INTO orders 
                (order_id, activation_status, esim_status, switch_status)
                VALUES (?, ?, ?, ?)
            ''', [
                ('ORD123', 'not_sent', 'active', 'ok'),
                ('ORD456', 'sent', 'failed', 'ok'),
                ('ORD789', 'sent', 'active', 'error'),
                ('ORD999', 'sent', 'active', 'ok')
            ])

# ========== 2. UPDATED TELECOM SYSTEM CLASS ==========
class TelecomSystem:
    def get_status(self, order_id: str) -> dict:
        with self.db.conn:
            cursor = self.db.get_cursor()
            cursor.execute('''
                SELECT activation_status, esim_status, switch_status
                FROM orders WHERE order_id = ?
            ''', (order_id,))
            result = cursor.fetchone()
            return {
                'activation': result[0],
                'esim': result[1],
                'switch': result[2]
            }
    
    def update_status(self, order_id: str, field: str, value: str):
        with self.db.conn:
            cursor = self.db.get_cursor()
            cursor.execute(f'''
                UPDATE orders
                SET {field} = ?
                WHERE order_id = ?
            ''', (value, order_id))

# Rest of the code remains the same as previous correct implementation
